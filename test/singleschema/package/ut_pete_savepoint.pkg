create or replace package ut_pete_savepoint as

    description pete_types.typ_description := 'Savepoint in convention test packages should not be modified by Pete';

    procedure cross_method_savepoint_before(d varchar2 := 'Should create savepoint');

    procedure cross_method_savepoint(d varchar2 := 'Should pass');

    procedure cross_method_savepoint_after(d varchar2 := 'Should rollback to savepoint');

end ut_pete_savepoint;
/
create or replace package body ut_pete_savepoint as

    procedure cross_method_savepoint_before(d varchar2) is
    begin
        --log
        pete.set_method_description(d);
        --test
        savepoint ut_pete_savepoint_sp1;
    end;

    procedure cross_method_savepoint(d varchar2) is
    begin
        --log
        pete.set_method_description(d);
        --assert
        pete_assert.pass;
    end;

    procedure cross_method_savepoint_after(d varchar2) is
    begin
        --log
        pete.set_method_description(d);
        --
        rollback to savepoint ut_pete_savepoint_sp1;
        rollback;
    end;

end ut_pete_savepoint;
/
