create or replace package ut_test as

    description varchar2(255) := 'Test my amazing constraint';

    procedure before_all;

    procedure ins_child_without_parent_fails(d varchar2 := 'Insert child without existing parent fails');

    procedure ins_child_with_parent_succeeds(d varchar2 := 'Insert child with existing parent succeeds');

    procedure after_all;

end;
/
create or replace package body ut_test as

    procedure before_all is
    begin
        execute immediate 'create table x_parent (id integer primary key)';
        execute immediate 'create table x_child (id integer primary key, parent_id integer references x_parent(id))';
    end;

    procedure ins_child_without_parent_fails(d varchar2) is
        l_thrown boolean := false;
    begin
        --log
        pete.set_method_description(d);
        --test
        begin
            execute immediate 'insert into x_child values (1,1)';
            l_thrown := false;
        exception
            when others then
                l_thrown := true;
        end;
        --assert
        if not l_thrown then
            raise_application_error(-20000, q'{It should throw and it doesn't, so fix it!}');
        end if;
    end ins_child_without_parent_fails;

    procedure ins_child_with_parent_succeeds(d varchar2) is
    begin
        --log
        pete.set_method_description(d);
        --assert
        execute immediate 'insert into x_parent values (1)';
        execute immediate 'insert into x_child values (1,1)';
    end;

    procedure after_all is
    begin
        execute immediate 'drop table x_child';
        execute immediate 'drop table x_parent';
    end;

end;
/
